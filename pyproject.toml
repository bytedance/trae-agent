[project]
name = "trae-agent"
version = "0.1.0"
description = "LLM-based agent for general purpose software engineering tasks"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "openai>=1.86.0",
    "anthropic>=0.54.0,<=0.60.0",
    "click>=8.0.0",
    "google-genai>=1.24.0",
    "jsonpath-ng>=1.7.0",
    "pydantic>=2.0.0",
    "python-dotenv>=1.0.0",
    "rich>=13.0.0",
    "typing-extensions>=4.0.0",
    "ollama>=0.5.1",
    "socksio>=1.0.0",
    "tree-sitter-languages==1.10.2",
    "tree-sitter==0.21.3",
    "ruff>=0.12.4",
    "mcp==1.12.2",
    "asyncclick>=8.0.0",
    "pyyaml>=6.0.2",
    "textual>=0.50.0",
]

[project.optional-dependencies]
trae_api = [
    "fastapi>=0.116.1,<0.117",
    "uvicorn[standard]>=0.35.0,<0.36",
    "gunicorn>=23.0.0,<24",
    "pydantic>=2.10.4,<3",
    "pydantic-settings>=2.7.0,<3",
    "yarl>=1.18.3,<2",
    "ujson>=5.10.0,<6",
    "httptools>=0.6.4,<0.7",
    "opentelemetry-api>=1.36.0,<2",
    "opentelemetry-sdk>=1.36.0,<2",
    "opentelemetry-exporter-otlp>=1.36.0,<2",
    "opentelemetry-instrumentation>=0.57b0",
    "opentelemetry-instrumentation-fastapi>=0.57b0",
    "opentelemetry-instrumentation-logging>=0.57b0",
    "opentelemetry-instrumentation-system-metrics>=0.57b0",
    "prometheus-client>=0.21.0,<0.22",
    "psutil>=6.1.0,<7",
    "taskiq[zmq]>=0.11.10,<0.12",
    "taskiq-fastapi>=0.3.3,<0.4",
    "aiosqlite>=0.20.0,<0.21",
    "structlog>=23.1.0,<24",
    "python-json-logger>=2.0.7,<3",
    "asgi-correlation-id>=4.3.1,<5"
]
test = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-mock>=3.12.0",
    "pytest-cov>=4.0.0",
    "pre-commit>=4.2.0",
    "anyio>=4.10.0,<5",
    "pytest-env>=1.1.3,<2",
    "httpx>=0.28.1,<1.0.0",
]
evaluation = [
    "datasets>=3.6.0",
    "docker>=7.1.0",
    "pexpect>=4.9.0",
    "unidiff>=0.7.5",
]
ci = [
    "ty>=0.0.1a16",
]

[project.scripts]
trae-cli = "trae_agent.cli:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["trae_agent", "trae_api"]

[tool.pytest.ini_options]
minversion = "8.0"
addopts = [
    "-ra",
    "-q", 
    "--strict-markers",
    "--strict-config",
    "--tb=short",
    "--continue-on-collection-errors"
]
testpaths = [
    "tests",
]
asyncio_mode = "auto"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests", 
    "unit: marks tests as unit tests",
    "performance: marks tests as performance tests",
    "security: marks tests as security-related tests",
    "streaming: marks tests for streaming functionality",
    "concurrency: marks tests for concurrency scenarios",
    "memory: marks tests for memory leak detection",
    "parametrize: marks parametrized tests with multiple scenarios",
]
filterwarnings = [
    "error",
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning", 
    "ignore:.*unclosed.*:ResourceWarning",
    "ignore::pytest.PytestUnraisableExceptionWarning",
    "ignore:.*asyncio.*:RuntimeWarning",
]
env = [
    "TRAE_API_ENVIRONMENT = pytest",
    "PYTHONHASHSEED = 0",  # Deterministic hashing for tests
]
# Test discovery patterns  
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
# Parallel execution (if pytest-xdist installed)
# addopts = [..., "-n", "auto"]  # Uncomment for parallel execution

[tool.coverage.run]
source = ["trae_agent", "trae_api"]
omit = [
    "tests/*",
    "*/migrations/*", 
    "*/venv/*",
    "*/__pycache__/*",
    "*/node_modules/*",
]
branch = true
parallel = true

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "def __str__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
    "except ImportError:",
    "except ModuleNotFoundError:",
    "# TYPE_CHECKING",
    "if TYPE_CHECKING:",
]
fail_under = 85.0

[tool.coverage.html]
directory = "htmlcov"
title = "Trae Agent Test Coverage Report"

[tool.coverage.xml]
output = "coverage.xml"


[tool.ruff]
line-length = 100

[tool.ruff.lint]
select = [
    "B",
    "SIM",
    "C4",
    "E4", "E9", "E7", "F",
    "I"
]

[dependency-groups]
dev = [
    "types-pyyaml>=6.0.12.20250516",
]
